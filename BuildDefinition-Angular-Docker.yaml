name: 1.0$(rev:.r) # build numbering format

resources:
- repo: self
queue:
  name: Hosted Ubuntu 1604
  demands: npm

steps:
- task: Npm@1
  displayName: 'Install NPM Packages'
  inputs:
    verbose: false


- task: Npm@1
  displayName: 'Lint'
  inputs:
    command: custom

    verbose: false

    customCommand: 'run ng lint'


- task: Npm@1
  displayName: 'Run Unit Tests'
  inputs:
    command: custom

    verbose: false

    customCommand: 'run ci-unit-test'


- task: Npm@1
  displayName: Run End2End Tests
  inputs:
    command: custom

    verbose: false

    customCommand: 'run ci-e2e-test'


- task: PublishTestResults@2
  displayName: 'Publish Test Results'
  inputs:
    testResultsFiles: '**/testresults/*-tests.xml'

    failTaskOnFailedTests: true

  condition: succeededOrFailed()



- task: Npm@1
  displayName: 'Build Application for Production'
  inputs:
    command: custom

    verbose: false

    customCommand: 'run ci-build-prod'


- task: YodLabs.VariableTasks.SetVariable.SetVariable@0
  displayName: 'Set Variable ImageName to $(Build.Repository.Name) with toLowerCase applied'
  inputs:
    variableName: ImageName

    value: '$(Build.Repository.Name)'

    transform: toLowerCase


- task: YodLabs.VariableTasks.SetVariable.SetVariable@0
  displayName: 'Set Variable ImageName to $(ImageName) with replace applied'
  inputs:
    variableName: ImageName

    value: '$(ImageName)'

    transform: replace

    searchValue: '\.'

    newValue: '-'


- task: Docker@0
  displayName: 'Build Docker Image'
  inputs:
    containerregistrytype: 'Container Registry'

    dockerRegistryConnection: DockerHub

    imageName: '$(ImageName)'

    additionalImageTags: '$(Build.BuildNumber)'


- task: Docker@0
  displayName: 'Push Docker Image'
  inputs:
    containerregistrytype: 'Container Registry'

    dockerRegistryConnection: DockerHub

    action: 'Push an image'

    imageName: '$(ImageName)'

    additionalImageTags: '$(Build.BuildNumber)'

    includeLatestTag: true


- task: powershell@2
  displayName: 'Update DockerStack'
  inputs:
    targetType: filePath
    filePath: './scripts/Update-Dockerstack.ps1' 
    arguments: '-repositoryLocalPath $(Build.Repository.LocalPath) -imageName $(ImageName):$(Build.BuildNumber)'

- task: PublishBuildArtifacts@1
  displayName: 'Publish DockerStack'
  inputs:
    PathtoPublish: 'docker-stack.yml'
